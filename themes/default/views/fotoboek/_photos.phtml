<?php
$photos = $iter->get_photos();

$like_model = get_model('DataModelFotoboekLikes');
$likes = $like_model->count_for_photos($photos);
$my_likes = logged_in()
	? $like_model->get_for_lid(logged_in_member(), $photos)
	: array();

$visibility = array();

if ($iter instanceof DataIterFacesPhotobook
	&& in_array(logged_in('id'), $iter->get('member_ids')))
{
	$privacy_model = get_model('DataModelFotoboekPrivacy');
	$visibility = $privacy_model->get_visibility_for_photos($photos, logged_in_member());
}

$classnames = function($photo) use ($my_likes, $visibility) {
	$classes = array();

	if (isset($my_likes[$photo->get_id()]))
		$classes[] = 'liked';

	if (isset($visibility[$photo->get_id()]) && !$visibility[$photo->get_id()])
		$classes[] = 'hidden';

	return $classes;
};

if (!$photos || count($photos) == 0)
	return;
?>
<ul class="photos flow-gallery">
	<!-- add the 'grid-gallery' class for awesomeness -->
	<?php foreach ($photos as $photo): ?>
	<li id="photo_<?=$photo->get_id()?>" data-id="<?=$photo->get_id()?>" class="thumbnail <?=implode(' ', $classnames($photo))?>">
		<a href="fotoboek.php?book=<?=$iter->get_id()?>&amp;photo=<?=$photo->get_id()?>">
			<img src="<?=markup_format_attribute($photo->get_url(null, 400))?>" <?=($size = $photo->get_scaled_size(null, 400)) ? vsprintf('width="%d" height="%d"', $size) : ''?>>
			<?php if (isset($likes[$photo->get_id()])): ?>
				<span class="like-button" title="<?=markup_format_attribute(sprintf(_ngettext('%d lid vindt deze foto awesome', '%d leden vinden deze foto awesome', $likes[$photo->get_id()]), $likes[$photo->get_id()]))?>"><?=$likes[$photo->get_id()]?></span>
			<?php endif ?>
			<?php if (isset($visibility[$photo->get_id()]) && !$visibility[$photo->get_id()]): ?>
			<span class="privacy"><?=__('Verborgen voor anderen')?></span>
			<?php endif ?>
			<?php if ($photo->get('num_reacties') > 0): ?>
			<span class="comments"><?=markup_format_text(sprintf(_ngettext('%d reactie', '%d reacties', $photo->get('num_reacties')), $photo->get('num_reacties')))?></span>
			<?php endif ?>
			<?php if (strlen($photo->get('beschrijving')) > 0): ?>
			<span class="description"><?=markup_format_text($photo->get('beschrijving'))?></span>
			<?php endif ?>
		</a>
	</li>
	<?php endforeach ?>
</ul>

<script src="<?=get_theme_data('data/flowgallery.js')?>"></script>
<script>$('.photos.flow-gallery').flowgallery();</script>
<script>
var $modal, $target;

var cache = {};

var getModal = function() {
	if (!$modal) {
		$modal = $('<div class="modal" tabindex="-1">'),
		$modalWindow = $('<div class="window photo-window">').appendTo($modal),
		$closeButton = $('<button class="close-button">&times;</button>').appendTo($modalWindow);

		$target = $('<div>').appendTo($modalWindow);

		$modal.insertBefore($('.world'));//.delay(100).addClass('')

		var closeModal = function() {
			// Detach the $target separately because these nodes (the photos)
			// should stay loaded and keep their events attached.
			$target.detach(); 
			$modal.remove();
			$modal = $target = null;
		};

		// Close the modal on clicking the close button
		$closeButton.on('click', function(e) {
			e.preventDefault();
			closeModal();
		});

		// Close the model on pressing the escape key while inside
		$modal.on('keydown.nav', function(e) {
			// Don't prevent normal keyboard usage
			if (['TEXTAREA', 'INPUT'].indexOf(event.target.nodeName) !== -1)
				return;

			switch (e.keyCode) {
				case 27: // escape
					if ($modal.parent()) {
						e.preventDefault();
						closeModal();
					}
					break;

				case 37: // left arrow
					if ($modal.find('.navigation .previous').click())
						e.preventDefault();
					break;

				case 39: // right arrow
					if ($modal.find('.navigation .next').click())
						e.preventDefault();
					break;

				case 76: // 'l'
					if ($modal.find('.like-button').click())
						e.preventDefault();
					break;

				case 84: // 't'
					if ($modal.find('#tagging-toggle').click())
						e.preventDefault();
					break;
			}
		});

		$modal.focus();
	}

	return $modal;
}

var prefetchPhotoLink = function(link, callback) {
	if (!cache[link]) {
		cache[link] = $('<div>').load(link + ' #a', function() {
			// First of all, fire the partially loaded thingy
			$(document.body).trigger(jQuery.Event('partial-content-loaded', {target: $(this)}));

			// Remove the message box style, we don't use it
			$(this).find('#a').removeClass('messageBox');

			// Remove the title bar, for now
			$(this).find('.photo-page-header').remove();

			// Remove the slides, we don't use them here.
			$(this).find('.slides').remove();

			// Hook into the 'next' and 'prev' links
			$(this).find('.navigation .next, .navigation .previous').click(function(e) {
				if (e.ctrlKey || e.shiftKey || e.metaKey)
					return;

				e.preventDefault();

				loadPhotoLink($(this).attr('href'));
			});

			if (callback)
				callback.apply($(this));
		});
	} else {
		if (callback)
			callback.apply(cache[link]);
	}
};

var loadPhotoLink = function(link) {
	$target.detach();

	var $loading = $('<div>').addClass('loading-text').text('Loadingâ€¦').appendTo($modal.find('.window'));

	prefetchPhotoLink(link, function() {
		$loading.replaceWith(this);
		$target = $(this);

		// Prefetch the next photo
		$target.find('.navigation .next').each(function() {
			prefetchPhotoLink($(this).attr('href'));
		});
	});
};

$('.photos').on('click', '.thumbnail > a', function(e) {
	if (e.ctrlKey || e.shiftKey || e.metaKey)
		return;

	e.preventDefault();

	getModal();

	loadPhotoLink($(this).attr('href'));
});
</script>