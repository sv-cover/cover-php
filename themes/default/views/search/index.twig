{% extends '@layout/layout.twig' %}

{% block title __('Search') ~ ' – ' ~ parent() %}

{% block content %}
<h1 class="title">{{ __('Search') }}</h1>
<div class="media block">
	<form method="get" action="search.php" class="media-content">
		<div class="field has-addons">
			<div class="control is-expanded">
				<label for="field-query" class="is-sr-only">{{ __('Search query') }}</label>
				<input class="input" type="search" name="query" id="field-query" value="{{ query|e('html_attr') }}" placeholder="{{ __('Type here to search…')|e('html_attr') }}" tabindex="1" {% if not results %}autofocus{% endif %}>
			</div>
			<div class="control">
				<button class="button" type="submit">
	                <span class="icon">
	                    <i class="fas fa-search"></i>
	                    <span class="is-sr-only">{{ __('Search') }}</span>
	                </span>
	            </button>
			</div>
		</div>
	</form>
</div>

{% if results is not null %}
<div class="level">
	<div class="level-left">
		<p class="level-item">
			{{ __N('There is %d search result.', 'There are %d search results.', results|length) }}
			{% if errors %}
				{{ __N('Search results from the %s category are missing due to errors.', 'Search results from the categories %s are missing due to errors.', errors|human_join, errors|length) }}
			{% endif %}
		</p>
	</div>
</div>
{% for result in results %}
	<article data-search-relevance="{{ '%0.2F'|format(result.search_relevance) }}" class="media">
		<div class="media-content">
			{{ include('_single_' ~ result.search_type ~ '.twig', {result: result, query:query}) }}
		</div>
	</article>
{% endfor %}
{% endif %}
<!--
	{% for category, time in timings %}
		{{ category }} {{ (time * 1000)|round(2) }}ms
	{% endfor %}
-->
<script>
jQuery(function($) {
	var links = $('.search-results > li h2 > a');

	// Prioritize tabs on the links
	links.each(function(i) {
		$(this).attr('tabindex', i + 1);
	});

	// Color the background according to the focussed status of the result
	links.on('focus', function(e) {
		$(this).closest('li').addClass('focussed');
	});

	links.on('blur', function(e) {
		$(this).closest('li').removeClass('focussed');
	});

	// Focus first search result
	if (links.length > 0)
		links.first().focus();

	$('.search-results').on('keydown', function(e) {
		var current_focus = 0;

		// Find currently focussed link
		links.each(function(i) {
			if ($(this).is(':focus')) {
				current_focus = i;
				return false;
			}
		});

		// Move the focus up or down (and wrap around)
		switch (e.keyCode) {
			case 40:
				links[(links.length + current_focus + 1) % links.length].focus();
				e.preventDefault();
				break;

			case 38:
				links[(links.length + current_focus - 1) % links.length].focus();
				e.preventDefault();
				break;
		}
	});
});
</script>
<script src="{{ link_static('data/flowgallery.js')|e('html_attr') }}"></script>
<script>$('.search-results .photos.flow-gallery').flowgallery();</script>
{% endblock %}